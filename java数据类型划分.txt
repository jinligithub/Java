分布式：多个电脑跑一个代码。java1java源文件：*.java 保存原始java 代码编译过程：javac + 要编译的源文件    -> 生成 .class文件（二进制文件），给JVM(java虚拟机)阅读的解释过程：java  + 主类名如何向主方法传递多个参数 java 启动的主类名 参数1 参数2....如何让编译过程支持中文 javac - encoding UTF-8  文件名.javajava的标识符与关键字1.java注释
	* 1单行注释:     //
	* 2.多行注释：/*.....*/   （不推荐）
	* 3.文档注释：/**  .... */    （用于方法与类之上描述其作用）

2.java 标识符
	* a.java中的标识符由字符数字，下划线 组成，并且不能以下划线开头，和java关键字
	* b.标识符采用有意义的名字

3.驼峰命名
	* a.变量，方法：标识符由多个单词组成，第一个单词首字母小写，第二个之后的首字母大写。eg: myFunction()，myFristInt;
	* b.类的命名(大驼峰)：类名以大写字母开头的名词，如果类名由多个单词组成，则每个单词首字母大写。java 源文件必须与公共类U（public class）的名称相同。 

       eg：class FristDemo
	* c.常量：命名全大写。多个单词间以下划线分隔  eg : MY_STRING

3.数据类型划分


     浮点型：默认值(0.0）：double,float3.1.2  字符型   char       （默认值\u0000）3.1.3  布尔型   boolean   (默认值flase)3.1.4  数据类型的使用
	* 描述整数 用int  ，小数 用double
	* long一般用于描述日期，时间，内存，或文件大小
	* 编码转换或者二进制流的操作使用byte
	* char一般用于描述中文

3.1.5  在java程序中，任何一个整形常量都是int类型3.1.6  在java 中声明一个long类型的常量，在数字后加上 l 或 L          eg:   System.out.println(11+1l)           结果为123.1.7  在java中数据类型转换
	* 大数据类型与小数据类型做数值运算时，小数据类型自动转化为大数据类型，无需强转
	* 大的数据类型转化为小数据类型，必须强转。可能会丢失类容。

例外：byte与Int 类型转换
	* 整形常量赋值给byte变量时，若常量在byte范围内，可以直接赋值无需强转。整形变量无论是否在byte范围内必须强转

eg：byte b1=120;//okbyte  b3=130;  //error，超出byte范围，必须强转int num1= 120;byte  b2=120;   //error 必须强转3.1.6小数默认为double类型。要为float类型，
需要在浮点数后加F 或者f 类型float    f1=10.2f;float   f2=(float)10.2;3..17字符型3.1.7所有数据类型的默认值必须结合类来观察，主方法中不存在默认值，主方法中变量必须赋值后使用。
3.2   引用数据类型数组，类，接口（默认值null）


